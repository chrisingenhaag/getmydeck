plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'net.researchgate.release' version '2.8.1'
}

group = 'de.ingenhaag'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.17.3")
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'de.cronn:validation-file-assertions:0.2.0'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mongodb'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootBuildImage {
	imageName = "registry.gitlab.com/cin/${project.name}:${project.version}"
	publish = !project.version.contains("-SNAPSHOT")
	docker {
		publishRegistry {
			url = System.getenv("CI_REGISTRY")
			username = System.getenv("CI_REGISTRY_USER")
			password = System.getenv("CI_REGISTRY_PASSWORD")
			token = System.getenv("CI_REGISTRY_TOKEN")
		}
	}
}

release {
	buildTasks = ['bootBuildImage']
	git {
		requireBranch = 'main'
		pushOptions = ["-o ci.skip"]
	}
}