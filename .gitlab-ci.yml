include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml

image: registry.gitlab.com/cin/custom-images:eclipse-temurin-git-21-jdk

services:
  - name: docker:24.0.5-dind
    alias: foobar
    command: [ "--tls=false" ]

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  DOCKER_HOST: "tcp://foobar:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - release
  - test

build:
  stage: build
  tags:
    - gitlab-org-docker
  script:
    - ./gradlew --build-cache build
  artifacts:
    reports:
      junit: build/test-results/test/*.xml
    paths:
      - build/reports/tests/

release:
  stage: release
  tags:
    - gitlab-org-docker
  before_script:
    - eval `ssh-agent -s`
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null # add ssh ke
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PUBLIC_KEY" >> ~/.ssh/id_rsa.pub
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git config --global user.email "gitlab@ingenhaag-tech.de"
    - git config --global user.name "Christian Ingenhaag"
    - git remote rm origin && git remote add origin git@gitlab.com:$CI_PROJECT_PATH.git
    - git fetch
    - git checkout $CI_COMMIT_REF_NAME
    - git status
  script:
    - ./gradlew release -Prelease.useAutomaticVersion=true --stacktrace
  only:
    - main

container_scanning:
  variables:
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE
    CI_APPLICATION_TAG: main
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      when: always
    - when: never
